{"version":3,"sources":["utils/API.js","components/Section.js","components/Navbar.js","App.js","index.js"],"names":["query","axios","get","styles","sectionStyles","background","ProductCard","product","index","handleAddToCart","className","key","name","regularPrice","value","sku","onClick","Section","useState","products","setProducts","productSearch","setProductSearch","event","preventDefault","target","console","log","style","onChange","API","then","res","data","catch","err","map","navbarStyle","justifyContent","Navbar","href","App","ReactDOM","render","document","getElementById"],"mappings":"qQAIe,EACA,SAAUA,GACrB,OAAOC,IAAMC,IAAN,sDAC0CF,EAD1C,oDCFLG,EAAS,CACbC,cAAe,CACbC,WAAY,UAMhB,SAASC,EAAT,GAA2D,IAApCC,EAAmC,EAAnCA,QAASC,EAA0B,EAA1BA,MAAOC,EAAmB,EAAnBA,gBACrC,OACE,yBAAKC,UAAU,UAAUC,IAAKH,GAC3BD,EAAQK,KADX,KACmBL,EAAQM,aACzB,4BAAQC,MAAOP,EAAQQ,IAAKC,QAASP,GAArC,gBAqDSQ,MA9Cf,WAAoB,IAAD,EACeC,mBAAS,IADxB,mBACVC,EADU,KACAC,EADA,OAEyBF,mBAAS,IAFlC,mBAEVG,EAFU,KAEKC,EAFL,OAGOJ,mBAAS,IAHhB,mBAKXT,GALW,UAKO,SAACc,GACvBA,EAAMC,iBACN,IAAMV,EAAQS,EAAME,OAAOX,MAC3BY,QAAQC,IAAIb,KAmBd,OACE,yBAAKc,MAAOzB,EAAOC,cAAeM,UAAU,WAC1C,oDACA,2BAAOI,MAAOO,EAAeQ,SAnBP,SAACN,GAAU,IAG3BT,EAAUS,EAAME,OAAhBX,MACRQ,EAAiBR,GACjBY,QAAQC,IAAIN,MAeV,4BAAQL,QAZa,SAACO,GAExBA,EAAMC,iBACNM,EAAgBT,GACbU,MAAK,SAACC,GAAD,OAASZ,EAAYY,EAAIC,KAAKd,aAEnCe,OAAM,SAACC,GAAD,OAAST,QAAQC,IAAIQ,QAM5B,UACA,yBAAKzB,UAAU,gBACZS,EAASiB,KAAI,SAAC7B,EAASC,GAAV,OACZ,kBAACF,EAAD,CACEK,IAAKH,EACLA,MAAOA,EACPD,QAASA,EACTE,gBAAiBA,UCnDvBN,G,MAAS,CACbkC,YAAa,CACXhC,WAAY,QACZiC,eAAgB,cAcLC,MARf,WACE,OACE,yBAAKX,MAAOzB,EAAOkC,YAAa3B,UAAU,UACxC,uBAAG8B,KAAK,KAAR,aCTSC,MATf,WACE,OACE,6BACE,kBAAC,EAAD,MACA,kBAAC,EAAD,QCJNC,IAASC,OAAO,kBAAC,EAAD,MAASC,SAASC,eAAe,W","file":"static/js/main.7c9747aa.chunk.js","sourcesContent":["import axios from \"axios\";\n\n// The getRecipes method retrieves recipes from the server\n// It accepts a \"query\" or term to search the recipe api for\nexport default {\n  getProducts: function (query) {\n    return axios.get(\n      `https://api.bestbuy.com/v1/products((search=${query}))?apiKey=0j7iapqW9cMtP87GqDaxc2Um&format=json`,\n    );\n  },\n};\n","import React, { useState } from \"react\";\nimport \"../styles/Section.css\";\nimport API from \"../utils/API\";\n\nconst styles = {\n  sectionStyles: {\n    background: \"white\",\n  },\n};\n\n// We use JSX curly braces to evaluate the style object on the JSX tag\n\nfunction ProductCard({ product, index, handleAddToCart }) {\n  return (\n    <div className=\"product\" key={index}>\n      {product.name} ${product.regularPrice}\n      <button value={product.sku} onClick={handleAddToCart}>\n        add to cart\n      </button>\n    </div>\n  );\n}\n\nfunction Section() {\n  const [products, setProducts] = useState([]);\n  const [productSearch, setProductSearch] = useState(\"\");\n  const [cart, setCart] = useState([]);\n\n  const handleAddToCart = (event) => {\n    event.preventDefault();\n    const value = event.target.value;\n    console.log(value);\n  };\n\n  const handleInputChange = (event) => {\n    // Destructure the name and value properties off of event.target\n    // Update the appropriate state\n    const { value } = event.target;\n    setProductSearch(value);\n    console.log(productSearch);\n  };\n\n  const handleFormSubmit = (event) => {\n    // When the form is submitted, prevent its default behavior, get recipes update the recipes state\n    event.preventDefault();\n    API.getProducts(productSearch)\n      .then((res) => setProducts(res.data.products))\n      // .then((res) => console.log(res.data))\n      .catch((err) => console.log(err));\n  };\n  return (\n    <div style={styles.sectionStyles} className=\"section\">\n      <h2>Commerce Application</h2>\n      <input value={productSearch} onChange={handleInputChange}></input>\n      <button onClick={handleFormSubmit}>Search</button>\n      <div className=\"product-list\">\n        {products.map((product, index) => (\n          <ProductCard\n            key={index}\n            index={index}\n            product={product}\n            handleAddToCart={handleAddToCart}\n          ></ProductCard>\n        ))}\n      </div>\n    </div>\n  );\n}\n\nexport default Section;\n","import React from \"react\";\nimport \"../styles/Navbar.css\";\n\n// By importing the Navbar.css file, it is added to the DOM whenever this component loads\n\n// We can also style a component inside of its JavaScript file by adding style properties to its rendered elements\n// Unlike regular HTML, a JSX style property must be an object instead of a string\n// On a style object, we camelCase all property names, and put all of the values in quotes\n// Non quoted values default to \"pixels\", e.g. height, margin, padding\n\nconst styles = {\n  navbarStyle: {\n    background: \"green\",\n    justifyContent: \"flex-end\"\n  }\n};\n\n// We use JSX curly braces to evaluate the style object on the JSX tag\n\nfunction Navbar() {\n  return (\n    <nav style={styles.navbarStyle} className=\"navbar\">\n      <a href=\"/\">Welcome</a>\n    </nav>\n  );\n}\n\nexport default Navbar;\n","import React from \"react\";\nimport Section from \"./components/Section\";\nimport Navbar from \"./components/Navbar\";\n\nfunction App() {\n  return (\n    <div>\n      <Navbar />\n      <Section />\n    </div>\n  );\n}\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./App\";\n\nReactDOM.render(<App />, document.getElementById(\"root\"));\n"],"sourceRoot":""}